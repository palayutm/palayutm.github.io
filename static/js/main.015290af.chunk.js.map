{"version":3,"sources":["ContestCalendar.js","App.js","index.js"],"names":["ContestCalendar","props","state","show_name","selected","api_name","contests","update_contests","duration","seconds","parseInt","days","Math","floor","days_s","hours","slice","minutes","utcTime","givenDate","Date","Intl","DateTimeFormat","dateStyle","timeStyle","format","obj","name","url","start_time","this","localTimeFromUtc","durationToText","status","exists","i","length","fetch","then","response","json","data","push","create_contest","setState","catch","error","console","sort","a","b","Paper","Table","TableHead","TableRow","TableCell","width","align","TableBody","map","row","key","href","idx","Array","keys","FormControl","component","FormGroup","aria-label","x","FormControlLabel","control","Checkbox","color","label","checked","labelPlacement","onChange","id","event","ns","target","renderTable","React","Component","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","ReactDOM","render","classes","useTheme","useState","open","setOpen","window","location","pathname","page","setPage","handleMenuClick","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","to","style","textDecoration","ListItem","button","matchPath","path","exact","ListItemIcon","ListItemText","primary","document","getElementById"],"mappings":"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","file":"static/js/main.015290af.chunk.js","sourcesContent":["import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nclass ContestCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show_name: [\"Codeforces\", \"TopCoder\", \"AtCoder\", \"CodeChef\"],\n      selected: [true, false, false, false],\n      api_name: [\"codeforces\", \"top_coder\", \"at_coder\", \"code_chef\"],\n      contests: []\n    };\n    this.update_contests();\n  }\n\n  durationToText(duration) {\n    if (duration === \"-\") return \"-\";\n\n    var seconds = parseInt(duration);\n\n    var days = Math.floor(seconds / (24 * 60 * 60));\n    var days_s = \"days\";\n    if (days === 1) days_s = \"day\";\n    seconds %= 24 * 60 * 60;\n\n    var hours = Math.floor(seconds / (60 * 60));\n    hours = (\"0\" + hours).slice(-2);\n    seconds %= 60 * 60;\n\n    var minutes = Math.floor(seconds / 60);\n    minutes = (\"0\" + minutes).slice(-2);\n\n    if (days > 0) return `${days} ${days_s} and ${hours}:${minutes}`;\n    else return `${hours}:${minutes}`;\n  }\n\n  localTimeFromUtc(utcTime) {\n    if (utcTime === \"-\") return \"-\";\n    var givenDate = new Date(utcTime);\n    var localDateString = Intl.DateTimeFormat(\"en-US\", {\n      dateStyle: \"medium\",\n      timeStyle: \"long\"\n    }).format(givenDate);\n    return localDateString;\n  }\n\n  create_contest(obj) {\n    return {\n      name: obj[\"name\"],\n      url: obj[\"url\"],\n      start_time: this.localTimeFromUtc(obj[\"start_time\"]),\n      duration: this.durationToText(obj[\"duration\"]),\n      status: obj[\"status\"] === \"BEFORE\" ? \"Waiting\" : \"Running\"\n    };\n  }\n\n  update_contests() {\n    var contests = [];\n    var exists = false;\n    for (var i = 0; i < this.state.show_name.length; i++) {\n      if (this.state.selected[i]) {\n        exists = true;\n        var url = \"https://www.kontests.net/api/v1/\" + this.state.api_name[i];\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {\n            for (var obj of data) {\n              if (\n                obj[\"name\"] !== \"ZCO Practice Contest\" &&\n                obj[\"name\"] !== \"INOI Practice Contest\"\n              ) {\n                contests.push(this.create_contest(obj));\n              }\n            }\n            this.setState({ contests: contests });\n          })\n          .catch(error => {\n            // handle your errors here\n            console.error(error);\n          });\n      }\n    }\n    if (!exists) {\n      this.setState({ contests: contests });\n    }\n  }\n\n  renderTable() {\n    this.state.contests.sort(function(a, b) {\n      return new Date(a.start_time) - new Date(b.start_time);\n    });\n    return (\n      <Paper>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell width=\"35%\" align=\"center\">\n                Name\n              </TableCell>\n              <TableCell align=\"center\">Start time</TableCell>\n              <TableCell align=\"center\">Duration</TableCell>\n              <TableCell align=\"center\">Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.contests.map(row => (\n              <TableRow key={row.name}>\n                <TableCell align=\"center\">\n                  {row.name}\n                  <br />\n                  <a href={row.url}>Enter</a>\n                </TableCell>\n                <TableCell align=\"center\">{row.start_time}</TableCell>\n                <TableCell align=\"center\">{row.duration}</TableCell>\n                <TableCell align=\"center\">{row.status}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n\n  render() {\n    const handleChange = id => event => {\n      var ns = this.state.selected;\n      ns[id] = event.target.checked;\n      this.setState({ selected: ns });\n      this.update_contests();\n    };\n    var idx = [...Array(this.state.show_name.length).keys()];\n    return (\n      <div>\n        <FormControl component=\"fieldset\">\n          <FormGroup aria-label=\"position\" name=\"position\" row>\n            {idx.map(x => (\n              <FormControlLabel\n                key={this.state.show_name[x]}\n                control={<Checkbox color=\"primary\" />}\n                label={this.state.show_name[x]}\n                checked={this.state.selected[x]}\n                labelPlacement=\"start\"\n                onChange={handleChange(x)}\n              />\n            ))}\n          </FormGroup>\n        </FormControl>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nexport default ContestCalendar;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { matchPath } from \"react-router-dom\";\n\nimport ContestCalendar from \"./ContestCalendar.js\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [page, setPage] = React.useState(window.location.pathname);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  function handleMenuClick(event, name) {\n    setPage(name);\n  }\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <AppBar\n          color=\"inherit\"\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              palaytum's home\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n\n          <List>\n            <Link\n              to=\"/\"\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\n            >\n              <ListItem\n                button\n                selected={\n                  matchPath(page, {\n                    path: \"/\",\n                    exact: true\n                  }) != null\n                }\n                key=\"home\"\n                onClick={event => handleMenuClick(event, \"/\")}\n              >\n                <ListItemIcon>\n                  <HomeIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Home\" />\n              </ListItem>\n            </Link>\n\n            <Link\n              to=\"/calendar/\"\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\n            >\n              <ListItem\n                button\n                key=\"calendar\"\n                selected={\n                  matchPath(page, {\n                    path: \"/calendar/\",\n                    exact: true\n                  }) != null\n                }\n                onClick={event => handleMenuClick(event, \"/calendar/\")}\n              >\n                <ListItemIcon>\n                  <EventIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Recent contests\" />\n              </ListItem>\n            </Link>\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <div>\n            <Route path=\"/calendar/\" component={ContestCalendar} />\n          </div>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}